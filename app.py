# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lLypiLEmP6qjDpcujnpm3q21B1Q5Qsen
"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile app.py
# import streamlit as st
# import joblib
# import pandas as pd
# 
# # Load the saved model and scaler
# model_path = 'svm_model.pkl'
# scaler_path = 'scaler.pkl'
# svm_model = joblib.load(model_path)
# scaler = joblib.load(scaler_path)
# 
# # Function to preprocess input and make predictions
# def predict(input_data):
#     input_df = pd.DataFrame([input_data])
#     scaled_data = scaler.transform(input_df)
#     prediction = svm_model.predict(scaled_data)
#     return prediction[0]
# 
# # Streamlit app
# st.title("SVM Prediction App")
# 
# # Input fields
# st.header("Enter Feature Values:")
# Feature1 = st.number_input("Feature 1", value=0.0)
# Feature2 = st.number_input("Feature 2", value=0.0)
# Feature3 = st.number_input("Feature 3", value=0.0)
# Feature4 = st.number_input("Feature 4", value=0.0)
# 
# if st.button("Predict"):
#     user_input = {
#         'Feature1': Feature1,
#         'Feature2': Feature2,
#         'Feature3': Feature3,
#         'Feature4': Feature4
#     }
#     result = predict(user_input)
#     st.subheader("Prediction Result:")
#     st.write(f"The predicted class is: {result}")
#