# -*- coding: utf-8 -*-
"""Untitled9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lLypiLEmP6qjDpcujnpm3q21B1Q5Qsen
"""

import streamlit as st
import joblib
import pandas as pd

# Load the saved model and scaler
model_path = 'svm_model.pkl'
scaler_path = 'scaler.pkl'
svm_model = joblib.load(model_path)
scaler = joblib.load(scaler_path)

# Function to preprocess input and make predictions
def predict(input_data):
    # Ensure the columns match the training feature names
    input_df = pd.DataFrame([input_data], columns=['Age', 'EstimatedSalary', 'Gender'])
    scaled_data = scaler.transform(input_df)
    prediction = svm_model.predict(scaled_data)
    return prediction[0]

# Streamlit app
st.title("SVM Prediction App")

# Input fields
st.header("Enter Feature Values:")

Age = st.number_input("Age", value=30)
EstimatedSalary = st.number_input("Estimated Salary", value=50000)
Gender = st.selectbox("Gender", ['Male', 'Female'])

# Convert Gender to a numeric value (assuming 0 for Male and 1 for Female, adjust if necessary)
Gender = 0 if Gender == 'Male' else 1

if st.button("Predict"):
    user_input = {
        'Age': Age,
        'EstimatedSalary': EstimatedSalary,
        'Gender': Gender
    }
    try:
        result = predict(user_input)
        st.subheader("Prediction Result:")
        st.write(f"The predicted class is: {result}")
    except Exception as e:
        st.write(f"Error in prediction: {e}")
